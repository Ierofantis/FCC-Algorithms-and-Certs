Regex
String s = "2314511167";
String[] nums = s.split("1+");
 =>["23", "45", "67"];
 
Hello  hello
d.getTokens(" +"); -> ["  "]

Concatenation

"Splitting a string, it's as easy as 1 2 33! Right?"
d.getTokens("it"); -> ["it", "it"]
This will match all of the digits, but will match them individually (i.e. "1", "2", "3", "3", etc)

Concatenation and Repetition

"Splitting a string, it's as easy as 1 2 33! Right?"
d.getTokens("it+"); -> ["itt", "it"]
it will match 1 or more characters in a row

Concatenation in doubt

"lalalaaaa! lala, la!"
d.getTokens("(la)+");
["lalala", "lala", "la"]

Concatenation and Repetition

"Splitting a string, it's as easy as 1 2 33! Right?"
d.getTokens("it*"); -> ["itt", "i","i","it","i"]

Alternation

d.getTokens("it|st"); -> ["it", "st","it"]

Character Classes

d.getTokens("[123]"); -> ["1", "2","3","3"]
d.getTokens("[1-3]");

Excluding a character->Negation

d.getTokens("[^a-z123]"); ["S"......"?"]
